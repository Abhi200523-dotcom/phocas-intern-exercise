/*
 * This source file was generated by the Gradle 'init' task
 */
package app;
import app.entity.Person;
import app.io.LoadPeople;
import app.service.PeopleStatistics;
import app.service.PersonStatistics;
import java.io.IOException;
import java.nio.file.Paths;
import java.util.List;
import java.util.Map;

public class App {


    public static void main(String[] args) throws IOException {
        LoadPeople loader = new LoadPeople();
        List<Person> people = loader.load(Paths.get("interndata.ndjson"));
        PersonStatistics.findOldestName(people)
                .ifPresentOrElse(
                        name -> System.out.println("\n" +"Oldest person: " + name + "\n"),
                        () -> System.out.println("No data available"+ "\n")
                );
        PeopleStatistics.findAverageAge(people)
                .ifPresentOrElse(
                        age -> System.out.println("Average age of data set: " + age + "\n" ),
                        () -> System.out.println("No data available"+ "\n")
                );
        System.out.println("Youngest person by country: ");
        Map<String, String> youngestAgeMap = PersonStatistics.findYoungestNameByCountry(people);
        youngestAgeMap.forEach((country, name) ->
                System.out.println(country + ": " + name));

        System.out.println("\n" + "Average age by country: ");
        Map<String, Double> averageAgeMap = PeopleStatistics.findAverageAgeByCountry(people);
        averageAgeMap.forEach((country, age) ->
                System.out.println(country + ": " + age));

    }
}
